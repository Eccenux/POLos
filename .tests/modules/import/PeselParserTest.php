<?php

// <editor-fold defaultstate="collapsed" desc="generic test preparation">
date_default_timezone_set('Europe/Paris');
// include tested class
$testedClass = preg_replace(
	array(
		'#\\.tests\\\\#',
		'#Test(?=.php$)#'
	)
	, ""
	, __FILE__
);
include $testedClass;
// </editor-fold>

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-06-18 at 01:00:05.
 */
class PeselParserTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @covers PeselParser::validatePesel
	 * @todo   Implement testValidatePesel().
	 */
	public function testValidatePesel()
	{
		$values = array(
			// too short / not a number
			'abc' => false,
			'5502146838' => false,
			'5502146838x' => false,
			'aaaaaaaaaaa' => false,
			// one valid
			'55021468389' => false,
			'55021468388' => true,
			'55021468387' => false,
			'55021468386' => false,
			'55021468385' => false,
			'55021468384' => false,
			'55021468383' => false,
			'55021468382' => false,
			'55021468381' => false,
			'55021468380' => false,
		);
		foreach ($values as $pesel => $expected)
		{
			$result = PeselParser::validatePesel($pesel);
			$this->assertEquals($expected, $result, "Testing: $pesel");
		}
	}

	/**
	 * @covers PeselParser::birthFromPesel
	 * @todo   Implement testBirthFromPesel().
	 */
	public function testBirthFromPesel()
	{
		$values = array(
			'550214xxxxx' => '1955-02-14',
			'551214xxxxx' => '1955-12-14',
			'552214xxxxx' => '2055-02-14',
			'553214xxxxx' => '2055-12-14',
			'554214xxxxx' => '2155-02-14',
			'555214xxxxx' => '2155-12-14',
			'556214xxxxx' => '2255-02-14',
			'557214xxxxx' => '2255-12-14',
			'558214xxxxx' => '1855-02-14',
			'559214xxxxx' => '1855-12-14',
		);
		foreach ($values as $pesel => $expected)
		{
			$result = PeselParser::birthFromPesel($pesel);
			$this->assertEquals($expected, $result, "Testing: $pesel");
		}
	}

	/**
	 * @covers PeselParser::ageFromPesel
	 * @todo   Implement testAgeFromPesel().
	 */
	public function testAgeFromPesel()
	{
		$age2 = strtotime("-50 years"); // must result in a date between 1900-1999 to work
		$pesel = date("ymd", $age2) . "00112";
		$result = PeselParser::ageFromPesel($pesel);
		$this->assertEquals(50, $result, "Testing: $pesel");
	}

}
